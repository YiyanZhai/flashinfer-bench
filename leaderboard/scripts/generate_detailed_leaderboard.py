import os
import json
import argparse

def generate_leaderboard_entry(kernel):
    """Create the formatted leaderboard JSON for one kernel."""
    return {
        "leaderboard": {
            "name": kernel["name"],
            "description": f"Autogenerated leaderboard for {kernel['name']}.",
            "reference": "<example code for reference>",
            "gpu_types": kernel["gpu_types"]
        },
        "rankings": {
            kernel["priority_gpu_type"]: [
                {
                    "user_name": user["user_name"],
                    "score": round(user["score"], 3)
                }
                for user in kernel.get("top_users", [])
            ]
        }
    }

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--input", required=True, help="Path to input JSON file (list of kernels)")
    parser.add_argument("--output_dir", required=True, help="Directory to write per-kernel output files")
    args = parser.parse_args()

    os.makedirs(args.output_dir, exist_ok=True)

    with open(args.input, "r") as f:
        kernels = json.load(f)

    for kernel in kernels:
        leaderboard_json = generate_leaderboard_entry(kernel)
        kernel_id = kernel["id"]
        output_path = os.path.join(args.output_dir, f"leaderboard_{kernel_id}.json")
        with open(output_path, "w") as f:
            json.dump(leaderboard_json, f, indent=2)
        print(f"âœ… Wrote {output_path}")

if __name__ == "__main__":
    main()
